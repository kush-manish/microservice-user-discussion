{
	"info": {
		"_postman_id": "1283c9e1-4b8f-4c4b-8b01-609b6d30a65d",
		"name": "User_Doc",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15230217",
		"_collection_link": "https://www.postman.com/manish-kush-postman/workspace/testassignment/collection/15230217-1283c9e1-4b8f-4c4b-8b01-609b6d30a65d?action=share&source=collection_link&creator=15230217"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Set the token and user ID as global variables",
									"if (jsonData.token != null)",
									"    pm.globals.set(\"token\", jsonData.token);",
									"if (jsonData.User_Id != null)",
									"    pm.globals.set(\"user_id_1\", jsonData.User_Id);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"email\", \"user@examples2.com\");",
									"pm.globals.set(\"mobile\", \"0987654322\");",
									"pm.globals.set(\"name\", \"Manish Kush\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Email\": \"{{email}}\",\n  \"Mobile_No\": \"{{mobile}}\",\n  \"Name\": \"{{name}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						},
						"description": "This API endpoint allows you to create a new user by sending a POST request to localhost:3000/api/users. The request should include the user's email, mobile number, and name in the raw request body.\n\n### Request Body\n\n- Email (text, required): The email of the user.\n    \n- Mobile_No (text, required): The mobile number of the user.\n    \n- Name (text, required): The name of the user.\n    \n\n### Response\n\nUpon successful execution, the API returns a JSON object with the following fields:\n\n- User_Id: The unique identifier of the newly created user.\n    \n- token: An authentication token for the user.\n    \n- expiresIn: The expiration time of the token.\n    \n\n### Response Headers\n\n- Status: 200\n    \n- Content-Type: application/json"
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"email\", \"user@examples2.com_updated\");",
									"pm.globals.set(\"mobile\", \"0987654322\");",
									"pm.globals.set(\"name\", \"Manish Kush_updated\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Email\": \"{{email}}\",\n  \"Mobile_No\": \"{{mobile}}\",\n  \"Name\": \"{{name}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users/{{user_id_1}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Set the token and user ID as global variables",
									"if (jsonData.token != null)",
									"    pm.globals.set(\"token\", jsonData.token);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Email\": \"{{email}}\",\n  \"Mobile_No\": \"{{mobile}}\",\n  \"User_Id\": \"{{user_id_1}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users/token",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users/{{user_id_1}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Name",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users/search?name=Manish",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "Manish"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users/{{user_id_1}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id_1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Follow",
			"item": [
				{
					"name": "Create User - followee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Set the token and user ID as global variables",
									"if (jsonData.token != null)",
									"    pm.globals.set(\"token_followee\", jsonData.token);",
									"if (jsonData.User_Id != null)",
									"    pm.globals.set(\"user_id_followee\", jsonData.User_Id);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"email_followee\", \"user@examples_followee.com\");",
									"pm.globals.set(\"mobile_followee\", \"12345678905\");",
									"pm.globals.set(\"name_followee\", \"Manish Kush\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Email\": \"{{email_followee}}\",\n  \"Mobile_No\": \"{{mobile_followee}}\",\n  \"Name\": \"{{name_followee}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Follow a User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"followeeId\": \"{{user_id_followee}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/follow/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"follow",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followers of a User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"followeeId\": \"{{user_id_followee}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/follow/followers/{{user_id_followee}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"follow",
								"followers",
								"{{user_id_followee}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followee of a User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"followeeId\": \"{{user_id_followee}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/follow/followees/{{user_id_1}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"follow",
								"followees",
								"{{user_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow a User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"followeeId\": \"{{user_id_followee}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/follow/unfollow",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"follow",
								"unfollow"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Discussions",
			"item": [
				{
					"name": "Create Discussion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"post_id\", jsonData.Post_Id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Text\": \"This is a discussion post.\",\n  \"Image_Link\": \"http://example.com/image.jpg\",\n  \"Tags\": \"tag2,tag3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/discuss",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Discussion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/discuss",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Discussion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/discuss/{{post_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss",
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Discussion By Tags",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/discuss/search?tags=tag1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss",
								"search"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Discussion By Text",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/discuss/searchByText?text=discussion",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss",
								"searchByText"
							],
							"query": [
								{
									"key": "text",
									"value": "discussion"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Discussion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"email\", \"user@examples2.com_updated\");",
									"pm.globals.set(\"mobile\", \"0987654322\");",
									"pm.globals.set(\"name\", \"Manish Kush_updated\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Text\": \"This is a discussion post._updated\",\n  \"Image_Link\": \"http://example.com/image.jpg\",\n  \"Tags\": \"tag2,tag3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/discuss/{{post_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss",
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Discussion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/discuss/{{post_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"discuss",
								"{{post_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Set the token and user ID as global variables",
									"if (jsonData.Comment_Id != null)",
									"    pm.globals.set(\"comment_id\", jsonData.Comment_Id);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Post_Id\": \"{{post_id}}\",\n  \"Parent_Comment_Id\": null,\n  \"Comment\": \"This is a comment.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/comments",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Set the token and user ID as global variables",
									"if (jsonData.token != null)",
									"    pm.globals.set(\"comment_id\", jsonData.Comment_Id);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Post_Id\": \"{{post_id}}\",\n  \"Parent_Comment_Id\": null,\n  \"Comment\": \"This is a comment._updated\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/comments/{{comment_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Commet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/comments/{{comment_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Commet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/comments/{{comment_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments for all Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/comments?postId={{post_id}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "postId",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Like/Unlike",
			"item": [
				{
					"name": "Like a Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/like/discuss/{{post_id}}/like",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"like",
								"discuss",
								"{{post_id}}",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like a Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/like/comments/{{comment_id}}/like",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"like",
								"comments",
								"{{comment_id}}",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike a Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/like/discuss/{{post_id}}/unlike",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"like",
								"discuss",
								"{{post_id}}",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike a Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/like/comments/{{comment_id}}/unlike",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"like",
								"comments",
								"{{comment_id}}",
								"unlike"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}